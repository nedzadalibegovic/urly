{"version":3,"sources":["contexts/TokenContext.jsx","components/Login.jsx","components/Nav.jsx","contexts/UrliesContext.jsx","contexts/EditContext.jsx","components/EditModal.jsx","components/SubmitModal.jsx","components/CopyButton.jsx","components/Urly.jsx","components/UrliesList.jsx","App.js","index.js"],"names":["TokenContext","createContext","TokenContextProvider","props","useState","token","setToken","history","useHistory","renewToken","a","fetch","process","credentials","response","json","accessToken","ok","push","Provider","value","children","Login","useContext","schema","yup","username","required","min","max","password","auth","setStatus","resetForm","method","headers","body","JSON","stringify","message","Container","className","initialValues","onSubmit","validationSchema","initialStatus","handleChange","handleSubmit","values","touched","errors","status","Form","noValidate","Group","Label","Control","id","name","type","placeholder","onChange","isInvalid","Feedback","Alert","variant","Button","Nav","logout","Navbar","Brand","Toggle","Collapse","Text","to","pathname","onClick","UrliesContext","UrliesContextProvider","urlies","setUrlies","renewUrlies","Authorization","addUrly","urly","Error","editUrly","_id","newUrlies","slice","index","findIndex","x","deleteUrly","filter","useEffect","EditContext","EditContextProvider","show","setShow","setId","title","setTitle","url","setUrl","EditModal","formik","useFormik","handleClose","deletion","Modal","onHide","backdrop","Header","closeButton","Title","Body","getFieldProps","Footer","SubmitModal","key","setKey","setUrly","shortenRef","useRef","newUrly","current","innerText","onclick","navigator","clipboard","writeText","validateOnMount","parser","DOMParser","text","document","parseFromString","querySelector","disabled","Tab","activeKey","Content","Pane","eventKey","isValid","style","textAlign","href","target","Spinner","animation","role","ref","CopyButton","copy","setTimeout","marginRight","Overlay","placement","Tooltip","Urly","UrliesList","Row","Col","length","paddingTop","Table","map","App","component","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6bf34984.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const TokenContext = createContext();\n\nconst TokenContextProvider = props => {\n    const [token, setToken] = useState('');\n    const history = useHistory();\n\n    const renewToken = async () => {\n        const response = await fetch(process.env.REACT_APP_TOKEN, {\n            credentials: 'include'\n        });\n        const { accessToken } = await response.json();\n\n        if (!response.ok) return history.push('/login');\n\n        setToken(accessToken);\n    };\n\n    return (\n        <TokenContext.Provider value={{ token, setToken, renewToken }}>\n            {props.children}\n        </TokenContext.Provider>\n    );\n};\n\nexport default TokenContextProvider;\n","import { Formik } from 'formik';\nimport React, { useContext } from 'react';\nimport { Alert, Button, Container, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { TokenContext } from '../contexts/TokenContext';\n\nconst Login = () => {\n    const { setToken } = useContext(TokenContext);\n    const history = useHistory();\n\n    const schema = yup.object({\n        username: yup.string().required().min(4).max(20),\n        password: yup.string().required().min(8),\n    });\n\n    const auth = async ({ username, password }, { setStatus, resetForm }) => {\n        const response = await fetch(process.env.REACT_APP_LOGIN, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username, password }),\n        });\n        const json = await response.json();\n\n        if (response.ok) {\n            // refreshToken should be automatically saved to browser as a cookie\n            setToken(json.accessToken);\n            history.push('/');\n        } else {\n            resetForm();\n            setStatus(json.message);\n        }\n    };\n\n    return (\n        <Container className=\"login-page\">\n            <Formik\n                initialValues={{ username: '', password: '' }}\n                onSubmit={auth}\n                validationSchema={schema}\n                initialStatus={''}\n            >\n                {({\n                    handleChange,\n                    handleSubmit,\n                    values,\n                    touched,\n                    errors,\n                    status,\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Form.Group>\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                id=\"username\"\n                                name=\"username\"\n                                type=\"text\"\n                                placeholder=\"Username\"\n                                value={values.username}\n                                onChange={handleChange}\n                                isInvalid={touched.username && errors.username}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                {errors.username}\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                value={values.password}\n                                onChange={handleChange}\n                                isInvalid={touched.password && errors.password}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                {errors.password}\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        {status && <Alert variant=\"danger\">{status}</Alert>}\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </Container>\n    );\n};\n\nexport default Login;\n","import React, { useContext } from 'react';\nimport { Container, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { TokenContext } from '../contexts/TokenContext';\n\nconst Nav = () => {\n    const { token, setToken } = useContext(TokenContext);\n\n    const logout = async () => {\n        await fetch(process.env.REACT_APP_LOGIN, {\n            method: 'DELETE',\n            credentials: 'include',\n        });\n        setToken('');\n    };\n\n    return (\n        <Container>\n            <Navbar>\n                <Navbar.Brand>\n                    <h3>Urly</h3>\n                </Navbar.Brand>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                        {token && (\n                            <Link to={{ pathname: '/login' }} onClick={logout}>\n                                Log out\n                            </Link>\n                        )}\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Navbar>\n        </Container>\n    );\n};\n\nexport default Nav;\n","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { TokenContext } from './TokenContext';\n\nexport const UrliesContext = createContext();\n\nconst UrliesContextProvider = (props) => {\n    const { token, renewToken } = useContext(TokenContext);\n    const [urlies, setUrlies] = useState([]);\n\n    const renewUrlies = async () => {\n        if (!token) return renewToken();\n\n        const response = await fetch(process.env.REACT_APP_API, {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        });\n\n        if (!response.ok) return renewToken();\n\n        setUrlies(await response.json());\n    };\n\n    const addUrly = async (urly) => {\n        const response = await fetch(process.env.REACT_APP_API, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify(urly),\n        });\n        const json = await response.json();\n\n        if (response.ok) {\n            setUrlies([...urlies, json]);\n            return json;\n        } else if (response.status === 403) {\n            await renewToken();\n            throw new Error('Access token expired, please retry action');\n        } else {\n            throw new Error(json.message);\n        }\n    };\n\n    const editUrly = async (urly) => {\n        const response = await fetch(\n            process.env.REACT_APP_API + `/${urly._id}`,\n            {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(urly),\n            }\n        );\n        const json = await response.json();\n\n        if (response.ok) {\n            const newUrlies = urlies.slice();\n            const index = newUrlies.findIndex((x) => x._id === json._id);\n\n            newUrlies[index] = json;\n            setUrlies(newUrlies);\n        } else if (response.status === 403) {\n            await renewToken();\n            throw new Error('Access token expired, please retry action');\n        } else {\n            throw new Error(json.message);\n        }\n    };\n\n    const deleteUrly = async (id) => {\n        const response = await fetch(process.env.REACT_APP_API + `/${id}`, {\n            method: 'DELETE',\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        });\n\n        if (response.ok) {\n            const newUrlies = urlies.filter((urly) => id !== urly._id);\n            setUrlies(newUrlies);\n        } else if (response.status === 403) {\n            await renewToken();\n            throw new Error('Access token expired, please retry action');\n        } else {\n            const json = await response.json();\n            throw new Error(json.message);\n        }\n    };\n\n    useEffect(() => {\n        renewUrlies();\n    }, [token]);\n\n    return (\n        <UrliesContext.Provider\n            value={{ urlies, addUrly, editUrly, deleteUrly }}\n        >\n            {props.children}\n        </UrliesContext.Provider>\n    );\n};\n\nexport default UrliesContextProvider;\n","import React, { createContext, useState } from 'react';\n\nexport const EditContext = createContext();\n\nconst EditContextProvider = (props) => {\n    const [show, setShow] = useState(false);\n    const [id, setId] = useState('');\n    const [title, setTitle] = useState('');\n    const [url, setUrl] = useState('');\n\n    return (\n        <EditContext.Provider\n            value={{ show, setShow, id, setId, title, setTitle, url, setUrl }}\n        >\n            {props.children}\n        </EditContext.Provider>\n    );\n};\n\nexport default EditContextProvider;\n","import { useFormik } from 'formik';\nimport React, { useContext, useEffect } from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { EditContext } from '../contexts/EditContext';\nimport { UrliesContext } from '../contexts/UrliesContext';\n\nconst EditModal = () => {\n    const { id, show, setShow, title, url } = useContext(EditContext);\n    const { editUrly, deleteUrly } = useContext(UrliesContext);\n\n    const formik = useFormik({\n        initialValues: {\n            title: title,\n            url: url,\n        },\n        onSubmit: async (values, { setStatus }) => {\n            try {\n                const urly = {\n                    _id: id,\n                    title: values.title,\n                    url: values.url,\n                };\n\n                await editUrly(urly);\n            } catch (err) {\n                setStatus(err.message);\n            }\n        },\n        validationSchema: yup.object({\n            title: yup.string().max(32).required('Cannot be empty'),\n            url: yup.string().url('Must be a valid URL').required(),\n        }),\n        initialStatus: '',\n    });\n\n    const handleClose = () => setShow(false);\n\n    const deletion = async () => {\n        try {\n            await deleteUrly(id);\n            handleClose();\n        } catch (err) {\n            formik.setStatus(err.message);\n        }\n    };\n\n    useEffect(() => {\n        formik.resetForm();\n    }, [show]);\n\n    return (\n        <Modal show={show} onHide={handleClose} backdrop=\"static\">\n            <Modal.Header closeButton>\n                <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Form noValidate onSubmit={formik.handleSubmit}>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            {...formik.getFieldProps('title')}\n                            isInvalid={\n                                formik.errors.title && formik.touched.title\n                            }\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {formik.errors.title}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>URL</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            {...formik.getFieldProps('url')}\n                            isInvalid={formik.errors.url && formik.touched.url}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {formik.errors.url}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    {formik.status && (\n                        <Alert variant=\"danger\">{formik.status}</Alert>\n                    )}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={deletion}>\n                        Delete\n                    </Button>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n};\n\nexport default EditModal;\n","import { useFormik } from 'formik';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Alert, Button, Form, Modal, Spinner, Tab } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { UrliesContext } from '../contexts/UrliesContext';\n\nconst SubmitModal = () => {\n    const { addUrly } = useContext(UrliesContext);\n    const [show, setShow] = useState(false);\n    const [key, setKey] = useState(1);\n    const [urly, setUrly] = useState(null);\n    const shortenRef = useRef(null);\n\n    const formik = useFormik({\n        initialValues: {\n            title: '',\n            url: '',\n        },\n        onSubmit: async (values) => {\n            try {\n                setKey(3);\n                const newUrly = await addUrly(values);\n                formik.setStatus('');\n                setUrly(newUrly);\n\n                shortenRef.current.innerText = 'Copy';\n                shortenRef.current.type = 'button';\n                shortenRef.current.onclick = navigator.clipboard.writeText(\n                    process.env.REACT_APP_REDIRECT + newUrly._id\n                );\n            } catch (err) {\n                setKey(2);\n                formik.setStatus(err.message);\n            }\n        },\n        validationSchema: yup.object({\n            title: yup.string().max(32).required('Cannot be empty'),\n            url: yup.string().url('Must be a valid URL').required(),\n        }),\n        initialStatus: '',\n        validateOnMount: true,\n    });\n\n    const handleClose = () => {\n        setShow(false);\n        formik.resetForm();\n    };\n\n    const handleShow = () => {\n        setKey(1);\n        setShow(true);\n        setUrly(null);\n        formik.resetForm();\n    };\n\n    useEffect(() => {\n        (async () => {\n            if (!formik.errors.url && formik.values.url !== '') {\n                const response = await fetch(\n                    'https://cors.nedzad.workers.dev/?' + formik.values.url\n                );\n\n                if (response.ok) {\n                    const parser = new DOMParser();\n                    const document = parser.parseFromString(\n                        await response.text(),\n                        'text/html'\n                    );\n\n                    formik.values.title = document.querySelector(\n                        'title'\n                    ).innerText;\n\n                    setKey(2);\n                }\n            }\n        })();\n    }, [formik.values.url]);\n\n    useEffect(() => {\n        if (key === 2) shortenRef.current.disabled = formik.errors.title;\n    }, [formik.errors.title]);\n\n    return (\n        <>\n            <Button onClick={handleShow}>Shorten</Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Shorten a URL</Modal.Title>\n                </Modal.Header>\n                <Form noValidate onSubmit={formik.handleSubmit}>\n                    <Modal.Body className=\"modal-body-center\">\n                        <Tab.Container activeKey={key}>\n                            <Tab.Content>\n                                <Tab.Pane eventKey={1}>\n                                    <Form.Group>\n                                        <Form.Label>URL</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            {...formik.getFieldProps('url')}\n                                            isValid={\n                                                !formik.errors.url &&\n                                                formik.values.url !== ''\n                                            }\n                                        />\n                                    </Form.Group>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={2}>\n                                    <Form.Group>\n                                        <Form.Label>Title</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            {...formik.getFieldProps('title')}\n                                            isValid={!formik.errors.title}\n                                            isInvalid={formik.errors.title}\n                                        />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            {formik.errors.title}\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                </Tab.Pane>\n                                <Tab.Pane\n                                    eventKey={3}\n                                    style={{ textAlign: 'center' }}\n                                >\n                                    {urly ? (\n                                        <a\n                                            href={\n                                                process.env.REACT_APP_REDIRECT +\n                                                urly._id\n                                            }\n                                            className=\"display-4\"\n                                            target=\"blank\"\n                                        >\n                                            Open my Urly!\n                                        </a>\n                                    ) : (\n                                        <Spinner\n                                            animation=\"border\"\n                                            role=\"status\"\n                                        >\n                                            <span className=\"sr-only\">\n                                                Loading...\n                                            </span>\n                                        </Spinner>\n                                    )}\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Tab.Container>\n\n                        {formik.status && (\n                            <Alert variant=\"danger\">{formik.status}</Alert>\n                        )}\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button ref={shortenRef} type=\"submit\" disabled>\n                            Shorten!\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default SubmitModal;\n","import React, { useRef, useState } from 'react';\nimport { Button, Overlay, Tooltip } from 'react-bootstrap';\n\nconst CopyButton = ({ id }) => {\n    const [show, setShow] = useState(false);\n    const target = useRef(null);\n\n    const copy = async () => {\n        const urly = process.env.REACT_APP_REDIRECT + id;\n\n        await navigator.clipboard.writeText(urly);\n        setShow(true);\n        setTimeout(() => setShow(false), 750);\n    };\n\n    return (\n        <>\n            <Button ref={target} style={{ marginRight: '5px' }} onClick={copy}>\n                Copy\n            </Button>\n\n            <Overlay target={target.current} show={show} placement=\"bottom\">\n                {(props) => <Tooltip {...props}>Copied to clipboard!</Tooltip>}\n            </Overlay>\n        </>\n    );\n};\n\nexport default CopyButton;\n","import React, { useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { EditContext } from '../contexts/EditContext';\nimport CopyButton from './CopyButton';\n\nconst Urly = ({ id, title, url }) => {\n    const { setShow, setId, setTitle, setUrl } = useContext(EditContext);\n\n    const showModal = () => {\n        setId(id);\n        setTitle(title);\n        setUrl(url);\n        setShow(true);\n    };\n\n    return (\n        <tr>\n            <td>{title}</td>\n            <td>{url}</td>\n            <td>\n                <div className={'urlies-button'}>\n                    <CopyButton id={id} />\n                    <Button onClick={showModal}>Edit</Button>\n                </div>\n            </td>\n        </tr>\n    );\n};\n\nexport default Urly;\n","import React, { useContext } from 'react';\nimport { Col, Container, Row, Table } from 'react-bootstrap';\nimport { UrliesContext } from '../contexts/UrliesContext';\nimport EditModal from './EditModal';\nimport SubmitModal from './SubmitModal';\nimport Urly from './Urly';\n\nconst UrliesList = () => {\n    const { urlies } = useContext(UrliesContext);\n\n    return (\n        <Container className=\"urlies-list\">\n            <EditModal />\n            <Row>\n                <Col>\n                    <p>You have shortened {urlies.length} links in total</p>\n                </Col>\n                <Col>\n                    <div className={'urlies-button'}>\n                        <SubmitModal />\n                    </div>\n                </Col>\n            </Row>\n            <Row style={{ paddingTop: '10px' }}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>URL</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {urlies.map((urly) => (\n                            <Urly\n                                id={urly._id}\n                                title={urly.title}\n                                url={urly.url}\n                                key={urly._id}\n                            />\n                        ))}\n                    </tbody>\n                </Table>\n            </Row>\n        </Container>\n    );\n};\n\nexport default UrliesList;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './components/Login';\nimport Nav from './components/Nav';\nimport UrliesList from './components/UrliesList';\nimport EditContextProvider from './contexts/EditContext';\nimport TokenContextProvider from './contexts/TokenContext';\nimport UrliesContextProvider from './contexts/UrliesContext';\n\nfunction App() {\n    return (\n        <Router>\n            <TokenContextProvider>\n                <UrliesContextProvider>\n                    <Nav />\n                    <Switch>\n                        <Route component={Login} path=\"/login\" exact />\n                        <EditContextProvider>\n                            <Route component={UrliesList} path=\"/\" exact />\n                        </EditContextProvider>\n                    </Switch>\n                </UrliesContextProvider>\n            </TokenContextProvider>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}